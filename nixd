#!/usr/bin/env sh

pushd "$(dirname '$0')" >/dev/null

__skip_git_sync=0
HOSTNAME=${HOSTNAME:=}
#!/bin/bash

# ANSI madness
# Reset
RESET="\e[0m"
# Regular Colors
RED="\e[31m"
GREEN="\e[32m"
YELLOW="\e[33m"
BLUE="\e[34m"
MAGENTA="\e[35m"
CYAN="\e[36m"
WHITE="\e[37m"
# Bright Colors
BRIGHT_BLACK="\e[90m"
BRIGHT_RED="\e[91m"
BRIGHT_GREEN="\e[92m"
BRIGHT_YELLOW="\e[93m"
BRIGHT_BLUE="\e[94m"
BRIGHT_MAGENTA="\e[95m"
BRIGHT_CYAN="\e[96m"
BRIGHT_WHITE="\e[97m"
# Text Formatting
BOLD="\e[1m"
ITALIC="\e[3m"
REVERSE="\e[7m"



function install_flake() {
  sudo ln -svf "$(realpath flake.nix)" "/etc/nixos/flake.nix"
}

function update_flake() {
  nix flake update
  if [[ $? -ne 0 ]]; then
    exit 1
  fi
  
  if [[ $__skip_git_sync -eq 0 ]]; then
    ./git-sync sync "changes from $(uname -n)-gen$old on $(date '+%Y-%m-%d %H:%M:%S %Z')"
    if [[ $? -ne 0 ]]; then
      exit 1
    fi
  fi
}

function check_flake_and_sync() {
  nix flake check --show-trace --extra-experimental-features nix-command --extra-experimental-features flakes --offline
  if [[ $? -ne 0 ]]; then
    exit 1
  fi

  if [[ $__skip_git_sync -eq 0 ]]; then
    ./git-sync sync "changes from $(uname -n)-gen$old on $(date '+%Y-%m-%d %H:%M:%S %Z')"
    if [[ $? -ne 0 ]]; then
      exit 1
    fi
  fi
}

function rebuild() {
  # Parse arguments scoped to rebuild()
  while [[ $# -gt 0 ]]; do
    case $1 in
      -h | --host)
        HOSTNAME=$2
        shift 2
      ;;
      -*)
        echo -e "${BRIGHT_YELLOW}Unknown option: $1${RESET}"
        usage 
      ;;
      *) break ;;
    esac
  done
  flake_uri=".#$HOSTNAME"

  old=$(readlink /nix/var/nix/profiles/system | awk -F'-' '{print $2}')

  # We need to sync git before the flake check - a nix error could prevent git sync from running
  if [[ $__skip_git_sync -eq 0 ]]; then
    ./git-sync sync "changes from $(uname -n)-gen$old on $(date '+%Y-%m-%d %H:%M:%S %Z')"
    if [[ $? -ne 0 ]]; then
      exit 1
    fi
  fi

  # Make sure the command for nixos-rebuild was provided
  if [[ $# -eq 0 ]]; then
    echo -e "${BRIGHT_YELLOW}Must provide a command for nixos-rebuild: $1${RESET}"
    usage
    exit 1
  fi

  sudo nixos-rebuild --flake "$flake_uri" --accept-flake-config "$@"
  # --show-trace --option eval-cache false
  if [[ $? -ne 0 ]]; then
    exit 1
  fi

  current=$(readlink /nix/var/nix/profiles/system | awk -F'-' '{print $2}')
  echo
  echo -e "${BRIGHT_GREEN} --- Generation $old -> $current --- ${RESET}"
}




function usage() {
   cat << EOF
Usage: $(basename "$0") [options] action [action_options]

Options:
  --help          Display this help message
  --skip-gitsync  Skip the git sync step in any action

Actions:
  rebuild | rb  command  Performs a git sync, then nixos-rebuild with command passed to it
    -h | --host name  Manually specify a hostname for nixos-rebuild (if blank, use current hostname)
  update | up     Performs a nix flake update (pins new revs for flake inputs), then git sync
  check | ch      Performs a nix flake check, then git sync
  install         Creates a link at /etc/nixos/flake.nix to refer to this flake
EOF
   exit 1
}

function main() {
  # Parse -* arguments
  while [[ $# -gt 0 ]]; do
    case $1 in
      --skip-gitsync) __skip_git_sync=1 ;;
      --help) usage ;;
      -*)
        echo -e "${BRIGHT_YELLOW}Unknown option: $1${RESET}"
        usage 
      ;;
      *) break ;;
    esac
    shift
  done

  # Main logic
  case $1 in
    rebuild | rb) 
      shift
      "rebuild" "$@"
    ;;
    update | up)
      shift
      "update_flake"
    ;;
    check | ch)
      shift
      "check_flake_and_sync"
    ;;
    install)
      shift
      "install_flake"
    ;;
    *)
      echo -e "${BRIGHT_YELLOW}Must provide an action${RESET}"
      usage
    ;;
  esac
  exit $?
}

# set -x
main "$@"